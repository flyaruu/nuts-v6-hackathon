meta {
  name: Nuts - Issue Org1 Credential
  type: http
  seq: 4
}

post {
  url: {{nuts-internal}}/internal/vcr/v2/issuer/vc
  body: json
  auth: none
}

body:json {
  {
    "@context": [
      "https://www.w3.org/2018/credentials/v1",
      "https://nuts.nl/credentials/2024"
    ],
    "type": [
      "VerifiableCredential",
      "NutsUraCredential"
    ],
    "issuer": "{{didIssuer}}",
    "credentialSubject": {
      "id": "{{didOrg1}}",
      "organization": {
        "name": "HA de Nootjes",
        "city": "Amandelmere",
        "ura":"{{uraOrg1}}"
      }
    },
    "expirationDate": "2025-09-12T00:00:00Z",
    "withStatusList2021Revocation": true
  }
}

assert {
  res.status: eq 200
}

script:post-response {
  const fetch = require('node-fetch')
  
  const url = bru.getEnvVar('nuts-internal') + `/internal/vcr/v2/holder/${bru.getVar('didOrg1')}/vc`
  
  console.log(url)
  
  const resp = await fetch(url, {
    method:"post",
    body: JSON.stringify(res.body),
    headers: {'Content-Type': 'application/json'}
  })
  
  
  const VcId = encodeURIComponent(res.body.id)
  
  bru.setVar("Org1VcId", VcId)
  
}
